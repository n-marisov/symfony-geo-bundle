services:

   # конфигурация для сервисов по умолчанию в *этом* файле
   _defaults:
      autowire: true      # Автоматически внедряет зависимости в ваши сервисы.
      autoconfigure: true # Автоматически регистрирует ваши сервисы как команды, подписчики событий и т.д.


   Maris\Symfony\Geo\:
      resource: '../../src/'
      exclude: '../../src/{DependencyInjection,Entity,Interfaces}'


   ########################################################################
   ############################# Калькуляторы #############################
   ########################################################################

   # Калькулятор сферической земли.
   geo.calculator.spherical:
      class: Maris\Symfony\Geo\Calculator\SphericalCalculator
      arguments:
         $ellipsoid: '%geo.ellipsoid%'
         $allowed: '%geo.allowed%'

   # Калькулятор эллипсоидной земли.
   geo.calculator.ellipsoidal:
      class: Maris\Symfony\Geo\Calculator\EllipsoidalCalculator
      arguments:
         $ellipsoid: '%geo.ellipsoid%'
         $allowed: '%geo.allowed%'


   # Калькулятор по умолчанию.
   #Maris\Symfony\Geo\Calculator\GeoCalculator: '@geo.calculator.spherical'

   geo.calculator:
      alias: Maris\Symfony\Geo\Calculator\GeoCalculator
      public: true

   ########################################################################
   ############################### Декодеры ###############################
   ########################################################################

   # Кодировщик полилиний
   geo.encoder.polyline:
      class: Maris\Symfony\Geo\Encoder\PolylineEncoder
      arguments:
         $precision: "%geo.precision%"

   ########################################################################
   ############################### Фабрики ################################
   ########################################################################

   # Фабрика для создания координат
   geo.factory.location:
      class: Maris\Symfony\Geo\Factory\LocationFactory

   # Фабрика для создания полилиний
   geo.factory.polyline:
      class: Maris\Symfony\Geo\Factory\PolylineFactory
      arguments:
         $locationFactory: '@geo.factory.location'
         $encoder: '@geo.encoder.polyline'
